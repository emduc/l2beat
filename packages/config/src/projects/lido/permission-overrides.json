{
  "version": "1.0",
  "lastModified": "2025-10-08T00:44:01.670Z",
  "contracts": {
    "eth:0xfFA96D84dEF2EA035c7AB153D8B991128e3d72fD": {
      "functions": [
        {
          "functionName": "setOwner",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets the owner of the contract. This role is dedicated to the DAO. The owner can add new guardians, change the quorum, and unpause the deposits.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T14:44:26.723Z"
        },
        {
          "functionName": "setPauseIntentValidityPeriodBlocks",
          "userClassification": "permissioned",
          "checked": true,
          "score": "medium-risk",
          "description": "Sets the window of validity of a pause intent. This is the reaction time allowed for guardians to pause deposits. When a guardian wants to pause deposits it specifies a block number, the pause is only applied if the current block number is within the validity period of the specified block. This is to avoid replay of pause messages.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T15:05:15.917Z"
        },
        {
          "functionName": "setMaxOperatorsPerUnvetting",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets a limit on how many node operators can have their vetted signing keys unvetted in one transaction, as a safeguard against drastic changes.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T15:05:10.563Z"
        },
        {
          "functionName": "setGuardianQuorum",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets the quorum value. This is the minimum number of guardians that need to take part in a deposit for it to be valid.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T14:47:10.959Z"
        },
        {
          "functionName": "addGuardian",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds a guardian and sets a new custom quorum value. Guardians co-sign deposits to reduce the risk of collusion with node operators.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-07T16:31:11.386Z"
        },
        {
          "functionName": "addGuardians",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds multiple guardians and sets a new custom quorum value. Guardians co-sign deposits to reduce the risk of collusion with node operators.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T14:32:19.568Z"
        },
        {
          "functionName": "removeGuardian",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Removes a guardian address and sets a new quorum value. There are no protections on the quorum, this could be set to zero (see setGuardianQuorum).",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T14:36:26.745Z"
        },
        {
          "functionName": "pauseDeposits",
          "userClassification": "permissioned",
          "checked": true,
          "score": "medium-risk",
          "description": "Pauses the deposits. Funds can no longer be deposited into new validators until deposits are unpaused. This can be called by any guardian when a frontrunning by a node operator is suspected and prevents the loss of user funds through deposits.",
          "ownerDefinitions": [
            {
              "path": "$self.getGuardians"
            }
          ],
          "timestamp": "2025-10-06T15:01:19.198Z"
        },
        {
          "functionName": "unpauseDeposits",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Unpauses the deposits without delay.",
          "ownerDefinitions": [
            {
              "path": "$self.getOwner"
            }
          ],
          "timestamp": "2025-10-06T14:43:53.476Z"
        },
        {
          "functionName": "depositBufferedEther",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Deposits ETH into a given validator using `Lido.deposit`. The message must include at least 4/6 signatures from guardians for it to be valid.",
          "ownerDefinitions": [
            {
              "path": "$self.getGuardians"
            }
          ],
          "timestamp": "2025-10-06T15:01:55.782Z"
        },
        {
          "functionName": "unvetSigningKeys",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Unvets signing keys for the given node operators. This can be called by any guardian when a frontrunning by a node operator is suspectedand prevents the loss of user funds through deposits.",
          "ownerDefinitions": [
            {
              "path": "$self.getGuardians"
            }
          ],
          "timestamp": "2025-10-06T15:05:48.571Z"
        }
      ]
    },
    "eth:0x9f3b9198911054B122fDb865f8A5Ac516201c339": {
      "functions": [
        {
          "functionName": "createPermission",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Creates a new permission and specifies its permission manager and the role ID.\t",
          "ownerDefinitions": [
            {
              "path": "$self.CREATE_PERMISSIONS_ROLE"
            }
          ],
          "timestamp": "2025-10-07T21:23:36.668Z"
        },
        {
          "functionName": "grantPermission",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a permission (a role) to an entity. The entity can then perform all the actions associated with the role. Optionally the manager can specify parameters associated with the permission that could grant additional permisisons specifically for those parameters.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:13:38.281Z"
        },
        {
          "functionName": "grantPermissionP",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a permission with parameters. Similar to grantPermission but allows specifying additional parameters that restrict or extend the permission.",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:13:46.752Z"
        },
        {
          "functionName": "revokePermission",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Revokes a permission from an entity.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:22:33.913Z"
        },
        {
          "functionName": "setPermissionManager",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets a permission (role)'s manager. The manager can grant and revoke the permissions for that role ID.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:23:22.058Z"
        },
        {
          "functionName": "removePermissionManager",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Removes the permission manager for a role and sets it to the zero address. This role can no longer be granted or revoked, but a new manager can still be named using the createPermission function.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:22:59.241Z"
        },
        {
          "functionName": "createBurnedPermission",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Permanently locks a permission so it can never be modified. This variant is called when the manager of the role was already the zero address.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE"
            }
          ],
          "timestamp": "2025-10-07T21:22:02.517Z"
        },
        {
          "functionName": "burnPermissionManager",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Permanently locks a permission so it can never be modified. This is done by changing the manager to a BURN_ENTITY.\t",
          "ownerDefinitions": [
            {
              "path": "$self.permissions[eth:0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb].CREATE_PERMISSIONS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].ASSIGN_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].MINT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xf73a1260d222f447210581DDf212D915c09a3249].REVOKE_VESTINGS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].EXECUTE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].MANAGE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CREATE_PAYMENTS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_PERIOD_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0xB9E5CBB9CA5b0d659238807E84D0176930753d86].CHANGE_BUDGETS_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_QUORUM_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].MODIFY_SUPPORT_ROLE.manager"
            },
            {
              "path": "$self.permissions[eth:0x2e59A20f205bB85a89C53f1936454680651E618e].CREATE_VOTES_ROLE.manager"
            }
          ],
          "timestamp": "2025-10-07T21:22:18.000Z"
        }
      ]
    },
    "eth:0xD15a672319Cf0352560eE76d9e89eAB0889046D3": {
      "functions": [
        {
          "functionName": "requestBurnMyStETHForCover",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Tranfers stETH from the sender and irreversibly locks it on the burner contract. This increases the cover-backed burning counter. A share burn is to compensate a slashing event.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.REQUEST_BURN_MY_STETH_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:14:47.521Z"
        },
        {
          "functionName": "requestBurnSharesForCover",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Transfers stETH shares from another user (who should have approved) and locks it on the burner contract. This increases the cover-backed burning counter. A share burn meant to cover is to compensate a slashing event.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.REQUEST_BURN_SHARES_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:18:36.050Z"
        },
        {
          "functionName": "requestBurnMyStETH",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Tranfers stETH from the sender and irreversibly locks it on the burner contract. This increases the non-cover backed burning counter.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.REQUEST_BURN_MY_STETH_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:19:24.302Z"
        },
        {
          "functionName": "requestBurnShares",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Transfers stETH shares from another user (who should have approved) and locks it on the burner contract. This increases the non-cover backed burning counter.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.REQUEST_BURN_SHARES_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:17:57.884Z"
        },
        {
          "functionName": "recoverExcessStETH",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T15:54:05.788Z"
        },
        {
          "functionName": "recoverERC20",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T15:54:05.797Z"
        },
        {
          "functionName": "recoverERC721",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T15:54:05.798Z"
        },
        {
          "functionName": "commitSharesToBurn",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Marks previously requested to burn cover and non-cover shares as burnt. This function is meant to be called by the Lido contract in the same tx as the share burning it actually done.\t",
          "ownerDefinitions": [
            {
              "path": "$self.STETH"
            }
          ],
          "timestamp": "2025-10-08T00:16:58.886Z"
        },
        {
          "functionName": "grantRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a role within the contract to a specific address. There are roles to allow burning stETH either from a delegated address or from the caller itself. Only the Governance is currently allowed to burn its own stETH.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:21:11.982Z"
        },
        {
          "functionName": "revokeRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Revokes a role to a specific address.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:21:58.565Z"
        }
      ]
    },
    "eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c": {
      "functions": [
        {
          "functionName": "transferToVault",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T19:19:15.299Z"
        }
      ]
    },
    "eth:0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": {
      "functions": [
        {
          "functionName": "execute",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Executes arbitrary function calls to any external contract with a given ETH value. This can perform any action that is allowed to the Agent in other Lido contracts, which includes critical ones.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].EXECUTE_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:54:38.166Z"
        },
        {
          "functionName": "safeExecute",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Similar to execute but with protections for known critical tokens. It ensures there are no direct calls to the protected tokens, the token balances don't decrease, and the list of protected tokens doesn't change.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].SAFE_EXECUTE_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:50:58.535Z"
        },
        {
          "functionName": "addProtectedToken",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Adds a token to the protected list (maximum of 10 tokens). Those tokens are safeguarded when proposals are executed using safeExecute.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].ADD_PROTECTED_TOKEN_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:58:00.862Z"
        },
        {
          "functionName": "removeProtectedToken",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Removes a token from the protected list.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].REMOVE_PROTECTED_TOKEN_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:58:48.570Z"
        },
        {
          "functionName": "presignHash",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Pre-approves a hash according to ERC-1271. It allows the governance to approve a hash so that it is considered valid once verified. This allows the approval of a message without requiring the contract to actually sign it.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].ADD_PRESIGNED_HASH_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:59:27.623Z"
        },
        {
          "functionName": "setDesignatedSigner",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds a designated signer. The external address can sign messages on behalf of the Agent according to ERC-1271.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].DESIGNATE_SIGNER_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:56:59.406Z"
        },
        {
          "functionName": "forward",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Executes a script as the Agent. This is meant to be called by to execute proposals through the Agent.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].RUN_SCRIPT_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:54:19.339Z"
        },
        {
          "functionName": "transfer",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Transfers a given ERC20 token out of the contract to a given address.",
          "ownerDefinitions": [
            {
              "path": "@acl.permissions[eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c].TRANSFER_ROLE"
            }
          ],
          "timestamp": "2025-10-07T20:51:56.517Z"
        },
        {
          "functionName": "initialize",
          "userClassification": "non-permissioned",
          "checked": true,
          "timestamp": "2025-10-06T15:06:24.675Z"
        }
      ]
    },
    "eth:0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F": {
      "functions": [
        {
          "functionName": "proxy__upgradeTo",
          "userClassification": "permissioned",
          "timestamp": "2025-10-02T21:26:09.167Z"
        }
      ]
    },
    "eth:0x8daEa53b17a629918CDFAB785C5c74077c1D895B": {
      "functions": [
        {
          "functionName": "addNodeOperatorStETH",
          "userClassification": "permissioned",
          "score": "medium-risk",
          "timestamp": "2025-10-02T21:26:35.194Z"
        }
      ]
    },
    "eth:0x4D4074628678Bd302921c20573EEa1ed38DdF7FB": {
      "functions": [
        {
          "functionName": "proxy__upgradeTo",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T21:27:42.520Z"
        }
      ]
    },
    "eth:0x919ac5C6c62B6ef7B05cF05070080525a7B0381E": {
      "functions": [
        {
          "functionName": "discardConsensusReport",
          "userClassification": "non-permissioned",
          "timestamp": "2025-10-02T21:27:52.408Z"
        }
      ]
    },
    "eth:0x71093efF8D8599b5fA340D665Ad60fA7C80688e4": {
      "functions": [
        {
          "functionName": "updateInitialEpoch",
          "userClassification": "non-permissioned",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:32:47.706Z"
        },
        {
          "functionName": "setFrameConfig",
          "userClassification": "permissioned",
          "checked": true,
          "score": "medium-risk",
          "description": "Sets the configuration of frames. Frames are time window of equal lenghts referencing the processing of a slot and the corresponding deadline. A report based on the consensus layer must be built and consensus must be reached before each deadline.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FRAME_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:33:57.962Z"
        },
        {
          "functionName": "setFastLaneLengthSlots",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the duration of a fast lane rotation in slots. Members in the fast lane can (and are expected to) submit their report during a dedicated fast lane time window before submissions are open to all other members. The members in the fast lanes are rotated at a rate set using this function. The goal is to enforce active participation of all oracle members, preventing lazy copying.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FAST_LANE_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:34:14.239Z"
        },
        {
          "functionName": "addMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds a member to the consensus committee. Members can contribute to building consensus and submit reports.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:25:43.190Z"
        },
        {
          "functionName": "removeMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Removes a member from the consensus committee, and sets a new quorum.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:27:12.736Z"
        },
        {
          "functionName": "setQuorum",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets the quorum value. This is the amount of equal reports that need to be accumulated for each slot for a report to be considered valid and ready for processing. A value higher the the number of members in the committee would make consensus impossible.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:29:15.115Z"
        },
        {
          "functionName": "disableConsensus",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Temporarily disables consensus by increasing the quorum value to an unreachable number. This prevents any consensus from being reached. Consensus needs to be re-enabled using setQuorum.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DISABLE_CONSENSUS_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:30:04.541Z"
        },
        {
          "functionName": "setReportProcessor",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the processor contract to which the reports are sent over to.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_REPORT_PROCESSOR_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:33:31.985Z"
        },
        {
          "functionName": "submitReport",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Used by oracle members to submit hash of the data calculated for the given reference slot. If consensus is reached (more submissions of the same report than the quorum amount) the HashConsensus contract submits this report to the processing contract (either AccountingOracle or ValidatorsExitBusOracle) to enable processing.\t",
          "ownerDefinitions": [
            {
              "path": "$self.getMembers.addresses"
            }
          ],
          "timestamp": "2025-10-08T00:32:20.266Z"
        },
        {
          "functionName": "grantRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a role within the contract to a specific address. This may allow addresses to execute any of the functions above related to the specific role.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:30:43.955Z"
        },
        {
          "functionName": "revokeRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Revokes a role for a specific address.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:31:11.405Z"
        }
      ]
    },
    "eth:0x7FaDB6358950c5fAA66Cb5EB8eE5147De3df355a": {
      "functions": [
        {
          "functionName": "updateInitialEpoch",
          "userClassification": "non-permissioned",
          "checked": false,
          "score": "unscored",
          "description": "",
          "ownerDefinitions": [],
          "timestamp": "2025-10-08T00:44:01.670Z"
        },
        {
          "functionName": "setFrameConfig",
          "userClassification": "permissioned",
          "checked": true,
          "score": "medium-risk",
          "description": "Sets the configuration of frames. Frames are time window of equal lenghts referencing the processing of a slot and the corresponding deadline. A report based on the consensus layer must be built and consensus must be reached before each deadline.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FRAME_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-07T19:06:02.215Z"
        },
        {
          "functionName": "setFastLaneLengthSlots",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the duration of a fast lane rotation in slots. Members in the fast lane can (and are expected to) submit their report during a dedicated fast lane time window before submissions are open to all other members. The members in the fast lanes are rotated at a rate set using this function. The goal is to enforce active participation of all oracle members, preventing lazy copying.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FAST_LANE_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.702Z"
        },
        {
          "functionName": "addMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds a member to the consensus committee. Members can contribute to building consensus and submit reports.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE.members"
            }
          ],
          "timestamp": "2025-10-06T18:11:02.341Z"
        },
        {
          "functionName": "removeMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Removes a member from the consensus committee, and sets a new quorum.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.703Z"
        },
        {
          "functionName": "setQuorum",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets the quorum value. This is the amount of equal reports that need to be accumulated for each slot for a report to be considered valid and ready for processing. A value higher the the number of members in the committee would make consensus impossible.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.704Z"
        },
        {
          "functionName": "disableConsensus",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Temporarily disables consensus by increasing the quorum value to an unreachable number. This prevents any consensus from being reached. Consensus needs to be re-enabled using setQuorum.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DISABLE_CONSENSUS_ROLE"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.705Z"
        },
        {
          "functionName": "setReportProcessor",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the processor contract to which the reports are sent over to.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_REPORT_PROCESSOR_ROLE.members"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.705Z"
        },
        {
          "functionName": "submitReport",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Used by oracle members to submit hash of the data calculated for the given reference slot. If consensus is reached (more submissions of the same report than the quorum amount) the HashConsensus contract submits this report to the processing contract (either AccountingOracle or ValidatorsExitBusOracle) to enable processing.\t",
          "ownerDefinitions": [
            {
              "path": "$self.getMembers.addresses"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.706Z"
        },
        {
          "functionName": "grantRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a role within the contract to a specific address. This may allow addresses to execute any of the functions above related to the specific role.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.707Z"
        },
        {
          "functionName": "revokeRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Revokes a role for a specific address.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-03T14:58:41.708Z"
        }
      ]
    },
    "eth:0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288": {
      "functions": [
        {
          "functionName": "updateInitialEpoch",
          "userClassification": "non-permissioned",
          "checked": false,
          "score": "unscored",
          "description": "",
          "ownerDefinitions": [],
          "timestamp": "2025-10-08T00:43:46.419Z"
        },
        {
          "functionName": "setFrameConfig",
          "userClassification": "permissioned",
          "checked": true,
          "score": "medium-risk",
          "description": "Sets the configuration of frames. Frames are time window of equal lenghts referencing the processing of a slot and the corresponding deadline. A report based on the consensus layer must be built and consensus must be reached before each deadline.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FRAME_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:35:01.000Z"
        },
        {
          "functionName": "setFastLaneLengthSlots",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the duration of a fast lane rotation in slots. Members in the fast lane can (and are expected to) submit their report during a dedicated fast lane time window before submissions are open to all other members. The members in the fast lanes are rotated at a rate set using this function. The goal is to enforce active participation of all oracle members, preventing lazy copying.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_FAST_LANE_CONFIG_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:35:02.000Z"
        },
        {
          "functionName": "addMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Adds a member to the consensus committee. Members can contribute to building consensus and submit reports.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:35:03.000Z"
        },
        {
          "functionName": "removeMember",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Removes a member from the consensus committee, and sets a new quorum.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:35:04.000Z"
        },
        {
          "functionName": "setQuorum",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Sets the quorum value. This is the amount of equal reports that need to be accumulated for each slot for a report to be considered valid and ready for processing. A value higher the the number of members in the committee would make consensus impossible.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_MEMBERS_AND_QUORUM_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:35:05.000Z"
        },
        {
          "functionName": "disableConsensus",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Temporarily disables consensus by increasing the quorum value to an unreachable number. This prevents any consensus from being reached. Consensus needs to be re-enabled using setQuorum.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DISABLE_CONSENSUS_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:35:06.000Z"
        },
        {
          "functionName": "setReportProcessor",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Sets the processor contract to which the reports are sent over to.",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.MANAGE_REPORT_PROCESSOR_ROLE.members"
            }
          ],
          "timestamp": "2025-10-08T00:35:07.000Z"
        },
        {
          "functionName": "submitReport",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Used by oracle members to submit hash of the data calculated for the given reference slot. If consensus is reached (more submissions of the same report than the quorum amount) the HashConsensus contract submits this report to the processing contract (either AccountingOracle or ValidatorsExitBusOracle) to enable processing.\t",
          "ownerDefinitions": [
            {
              "path": "$self.getMembers.addresses"
            }
          ],
          "timestamp": "2025-10-08T00:35:08.000Z"
        },
        {
          "functionName": "grantRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Grants a role within the contract to a specific address. This may allow addresses to execute any of the functions above related to the specific role.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:35:09.000Z"
        },
        {
          "functionName": "revokeRole",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Revokes a role for a specific address.\t",
          "ownerDefinitions": [
            {
              "path": "$self.accessControl.DEFAULT_ADMIN_ROLE"
            }
          ],
          "timestamp": "2025-10-08T00:35:10.000Z"
        }
      ]
    },
    "eth:0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb": {
      "functions": [
        {
          "functionName": "proxy__ossify",
          "userClassification": "permissioned",
          "checked": true,
          "score": "low-risk",
          "description": "Ossifies the proxy. This freezes the current implementation of the `LidoLocator` and effectively makes it non-upagreable by changing the proxy admin to the zero address.",
          "ownerDefinitions": [
            {
              "path": "$self.$admin"
            }
          ],
          "timestamp": "2025-10-06T14:28:13.029Z"
        },
        {
          "functionName": "proxy__changeAdmin",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Changes the proxy admin. The admin can update the entire implementation and logic of the `LidoLocator`.",
          "ownerDefinitions": [
            {
              "path": "$self.$admin"
            }
          ],
          "timestamp": "2025-10-06T14:28:48.677Z"
        },
        {
          "functionName": "proxy__upgradeTo",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Upgrades the implementation of the `LidoLocator`. This can change the entire logic of the contract including change ownership of funds locked in the contract, if any.\t",
          "ownerDefinitions": [
            {
              "path": "$self.$admin"
            }
          ],
          "timestamp": "2025-10-06T14:29:10.017Z"
        },
        {
          "functionName": "proxy__upgradeToAndCall",
          "userClassification": "permissioned",
          "checked": true,
          "score": "high-risk",
          "description": "Similar to _upgradeTo_, and then calls a function in the new contract.",
          "ownerDefinitions": [
            {
              "path": "$self.$admin"
            }
          ],
          "timestamp": "2025-10-06T14:30:30.496Z"
        }
      ]
    }
  }
}