{
  "name": "boringvault",
  "timestamp": 1757591877,
  "configHash": "0xe51179c1997182214215be553d5abeed5deb47d087864fc32b08ed4124e1a6d8",
  "entries": [
    {
      "address": "eth:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x000D4FdD11B99abD59a9463027F55897aE6523B2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x0cb72C1F6a36c225A7E2B21712E8853A4A1acc47",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AccountantWithRateProviders",
      "address": "eth:0x0d05D94a5F1E76C18fbeB7A13d17C8a314088198",
      "type": "Contract",
      "sourceHashes": [
        "0x3f4030daaf8b90f2d1336497b9eaefde52d8edf0a945f8989f1497b4c100ff7c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717457087,
      "sinceBlock": 20014556,
      "values": {
        "$immutable": true,
        "accountantState": {
          "payoutAddress": "eth:0x25e8162d09239Fb5bE50E5DF18Adc1ED35533e61",
          "feesOwedInBase": 0,
          "totalSharesLastUpdate": "189300924726327692365890",
          "exchangeRate": "1062770734928030167",
          "allowedExchangeRateChangeUpper": 10050,
          "allowedExchangeRateChangeLower": 9950,
          "lastUpdateTimestamp": 1757544251,
          "isPaused": false,
          "minimumUpdateDelayInSeconds": 21600,
          "managementFee": 0
        },
        "authority": "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122",
        "base": "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "decimals": 18,
        "getRate": "1062770734928030167",
        "getRateSafe": "1062770734928030167",
        "owner": "eth:0x0000000000000000000000000000000000000000",
        "vault": "eth:0xf0bb20865277aBd641a307eCe5Ee04E79073416C"
      },
      "implementationNames": {
        "eth:0x0d05D94a5F1E76C18fbeB7A13d17C8a314088198": "AccountantWithRateProviders"
      }
    },
    {
      "address": "eth:0x0fCe5cd3FB6F3b3FB7f0f707070A0A7e2442f444",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x11752841D0c4D2B55667BF97F798E63e1773cD54",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EndpointV2",
      "address": "eth:0x1a44076050125825900e736c501f859c50fE728c",
      "type": "Contract",
      "template": "layerzero/EndpointV2",
      "sourceHashes": [
        "0x399160e7d36a21fca31097d7875daed8f421f788b77f2a71974d51938c3ea520"
      ],
      "proxyType": "immutable",
      "description": "Part of the LayerZero messaging protocol. OApp owners can configure custom verification (MessageLib) and execution settings here.",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "blockedLibrary": "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
        "eid": 30101,
        "EMPTY_PAYLOAD_HASH": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getRegisteredLibraries": [
          "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
          "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D"
        ],
        "getSendContext": [0, "eth:0x0000000000000000000000000000000000000000"],
        "isSendingMessage": false,
        "lzToken": "eth:0x0000000000000000000000000000000000000000",
        "nativeToken": "eth:0x0000000000000000000000000000000000000000",
        "NIL_PAYLOAD_HASH": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478"
      },
      "implementationNames": {
        "eth:0x1a44076050125825900e736c501f859c50fE728c": "EndpointV2"
      }
    },
    {
      "name": "BlockedMessageLib",
      "address": "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
      "type": "Contract",
      "template": "layerzero/BlockedMessageLib",
      "sourceHashes": [
        "0xf00c4e5b1b0f8da8f50ec8b06aa9f6c7275c5f03398e8b607c0ed093e7c4fe40"
      ],
      "proxyType": "immutable",
      "description": "Simple LayerZero library that blocks all messages if configured.",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "messageLibType": 2,
        "version": {
          "major": "18446744073709551615",
          "minor": 255,
          "endpointVersion": 2
        }
      },
      "implementationNames": {
        "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862": "BlockedMessageLib"
      }
    },
    {
      "name": "PaymentSplitter",
      "address": "eth:0x25e8162d09239Fb5bE50E5DF18Adc1ED35533e61",
      "type": "Contract",
      "sourceHashes": [
        "0x161f9954bea90af3140a06fcf82789f77f59a04bf70cc1dacc22bb656e54e92b"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1725478739,
      "sinceBlock": 20679360,
      "values": {
        "$immutable": true,
        "authority": "eth:0xb35a429474404e2EdA28548075623993A40239B6",
        "owner": "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96",
        "splits": [
          ["eth:0x5f0E7A424d306e9E310be4f5Bb347216e473Ae55", 5000],
          ["eth:0x68eC1FdD4Bb202B2e07aE751CB5553644aA48cFA", 5000]
        ]
      },
      "implementationNames": {
        "eth:0x25e8162d09239Fb5bE50E5DF18Adc1ED35533e61": "PaymentSplitter"
      }
    },
    {
      "address": "eth:0x39f86ECef62c5bcE23428d6b7c7050D9Ecb0e346",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x3DE2da610996eA5A72B9Af7cB8740caC48A9329f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RolesAuthority",
      "address": "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122",
      "type": "Contract",
      "sourceHashes": [
        "0x30069940b71fe65597cc5f6c89649ccd5f4f92c5a774a06974f85aa4f727f697"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1715647643,
      "sinceBlock": 19864769,
      "values": {
        "$immutable": true,
        "authority": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96"
      },
      "implementationNames": {
        "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122": "RolesAuthority"
      }
    },
    {
      "address": "eth:0x4A4e996Dd8F36Dcf46b30A7F97877da922323EEb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x544bDcBb88F2756000De227580aaad7376f3794E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x5bC6AA6ad117A8B50ABf9E1658971f5DA1968c5c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Treasury",
      "address": "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056",
      "type": "Contract",
      "sourceHashes": [
        "0x79f573a9d94def8dc0b4319d44595f806685b0ca5875891eff1ed40a9ff6b6e0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307779,
      "sinceBlock": 19093724,
      "values": {
        "$immutable": true,
        "lzTokenEnabled": false,
        "lzTokenFee": 0,
        "nativeBP": 0,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478"
      },
      "implementationNames": {
        "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056": "Treasury"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x5f0E7A424d306e9E310be4f5Bb347216e473Ae55",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1709611967,
      "sinceBlock": 19366501,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x000D4FdD11B99abD59a9463027F55897aE6523B2",
          "eth:0x9506429A421757711806c5cAF25ba1830E349B09",
          "eth:0x95A2115018b84cfe0630C16CCA277E1569a84BEf",
          "eth:0x9eaC7114D1a1EaBc4732A886795cFD9E6E35843f",
          "eth:0x544bDcBb88F2756000De227580aaad7376f3794E",
          "eth:0x0fCe5cd3FB6F3b3FB7f0f707070A0A7e2442f444",
          "eth:0xeF01c0D205961f792b72C568B6209872d0e82807"
        ],
        "$threshold": 3,
        "domainSeparator": "0xa5e10ee191d08747e2b38f0890978cce531a00166a4c62f2a6a292956a055b24",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 7 (43%)",
        "nonce": 191,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x5f0E7A424d306e9E310be4f5Bb347216e473Ae55": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "Safe",
      "address": "eth:0x68eC1FdD4Bb202B2e07aE751CB5553644aA48cFA",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732687271,
      "sinceBlock": 21277162,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "eth:0xAEDCa03e8b634514B90e68C1F812bBd52e2210a1",
          "eth:0x11752841D0c4D2B55667BF97F798E63e1773cD54",
          "eth:0x690e74e38E39558A03D5d692e0a79327AA467952"
        ],
        "$threshold": 2,
        "domainSeparator": "0x035445397953fe07b697e01e391e0428b0345df5b3f8de5565ad1bebc90712dc",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 58,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "eth:0x68eC1FdD4Bb202B2e07aE751CB5553644aA48cFA": "SafeProxy",
        "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      }
    },
    {
      "address": "eth:0x690e74e38E39558A03D5d692e0a79327AA467952",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ReadLib1002",
      "address": "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D",
      "type": "Contract",
      "template": "layerzero/ReadLib1002",
      "sourceHashes": [
        "0xf7800be6fd99520201da1404c35bac8a1ed826bbc2134f0a77547e0d7a74c9c1"
      ],
      "proxyType": "immutable",
      "description": "LayerZero library used to read state from remote blockchains.",
      "sinceTimestamp": 1730488859,
      "sinceBlock": 21094853,
      "values": {
        "$immutable": true,
        "getTreasuryAndNativeFeeCap": [
          "eth:0x0000000000000000000000000000000000000000",
          450000000000000
        ],
        "messageLibType": 2,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "version": { "major": 10, "minor": 0, "endpointVersion": 2 }
      },
      "implementationNames": {
        "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D": "ReadLib1002"
      }
    },
    {
      "address": "eth:0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x7C96179df8619E49B389784ECDBBcA7090a5D08F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x9506429A421757711806c5cAF25ba1830E349B09",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x95A2115018b84cfe0630C16CCA277E1569a84BEf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LayerZeroTellerWithRateLimiting",
      "address": "eth:0x9AA79C84b79816ab920bBcE20f8f74557B514734",
      "type": "Contract",
      "sourceHashes": [
        "0x2de0177ec2dd0d906c40bfcf69e0405ec4f72c95bd8cd151da0f9122f795f9d8"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1741814939,
      "sinceBlock": 22033474,
      "values": {
        "$immutable": true,
        "accountant": "eth:0x0d05D94a5F1E76C18fbeB7A13d17C8a314088198",
        "authority": "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122",
        "composeMsgSender": "eth:0x9AA79C84b79816ab920bBcE20f8f74557B514734",
        "depositNonce": 4555,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "isPaused": false,
        "nativeWrapper": "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 1 },
        "owner": "eth:0x0000000000000000000000000000000000000000",
        "publicDepositHistory": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa08e4e93afbf370d07cb92f906fc84d7df64aae4b6936d25bd28933812f9820e",
          "0x50b73b58f9ac8d7470cacf34b0fc671e61161e5ced21092a8c5097978e2b0946",
          "0x9da4a8aadbad059c2fd6482b7266af23fbd957708119c2a04d7466d41d9f50eb",
          "0x8b4536ec07ace95f9cb6fceae53f840bd0fd8c85c0659d964d44227c4f06b5e3"
        ],
        "shareLockPeriod": 0,
        "vault": "eth:0xf0bb20865277aBd641a307eCe5Ee04E79073416C"
      },
      "errors": { "publicDepositHistory": "Processing error occurred." },
      "implementationNames": {
        "eth:0x9AA79C84b79816ab920bBcE20f8f74557B514734": "LayerZeroTellerWithRateLimiting"
      }
    },
    {
      "address": "eth:0x9eaC7114D1a1EaBc4732A886795cFD9E6E35843f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xAEDCa03e8b634514B90e68C1F812bBd52e2210a1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RolesAuthority",
      "address": "eth:0xb35a429474404e2EdA28548075623993A40239B6",
      "type": "Contract",
      "sourceHashes": [
        "0x30069940b71fe65597cc5f6c89649ccd5f4f92c5a774a06974f85aa4f727f697"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1725478739,
      "sinceBlock": 20679360,
      "values": {
        "$immutable": true,
        "authority": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96"
      },
      "implementationNames": {
        "eth:0xb35a429474404e2EdA28548075623993A40239B6": "RolesAuthority"
      }
    },
    {
      "name": "SendUln302",
      "address": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
      "type": "Contract",
      "template": "layerzero/SendUln302",
      "sourceHashes": [
        "0x159d8f84a5100285a7401e1ccb3d40a64fe944d9beb951c81749de40279a5876"
      ],
      "proxyType": "immutable",
      "description": "Send Library used by LayerZero, defining the protocol/execution of sent messages.",
      "sinceTimestamp": 1706307839,
      "sinceBlock": 19093729,
      "values": {
        "$immutable": true,
        "messageLibType": 0,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "treasury": "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "implementationNames": {
        "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1": "SendUln302"
      }
    },
    {
      "name": "OneSig",
      "address": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
      "type": "Contract",
      "template": "layerzero/OneSigMultisig",
      "sourceHashes": [
        "0x6a2feeb0055614ee29c746b6052e64dc677ffa602b25dfeb74cbf948bc6d9b74"
      ],
      "proxyType": "immutable",
      "description": "Custom multisignature contract allowing offchain signing and execution on multiple target chains.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x1a44076050125825900e736c501f859c50fE728c",
          "description": "configure the default send/receive libraries used for verification, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1748566235,
      "sinceBlock": 22592087,
      "values": {
        "$immutable": true,
        "$members": [
          "eth:0x0cb72C1F6a36c225A7E2B21712E8853A4A1acc47",
          "eth:0x5bC6AA6ad117A8B50ABf9E1658971f5DA1968c5c",
          "eth:0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
          "eth:0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
          "eth:0xe67DB04d7eFF4e9ec282eD929632D4FF058112d7"
        ],
        "$threshold": 3,
        "executorRequired": true,
        "getExecutors": ["eth:0x39f86ECef62c5bcE23428d6b7c7050D9Ecb0e346"],
        "LEAF_ENCODING_VERSION": 1,
        "nonce": 9,
        "ONE_SIG_ID": 30101,
        "seed": "0xa8c6099081c03ac4c11ed511690f296077e94d44cf99bebc8c349cf972f87340",
        "totalExecutors": 1,
        "totalSigners": 5,
        "VERSION": "0.0.1"
      },
      "fieldMeta": {
        "executorRequired": {
          "description": "if true, only executor OR any signer can execute a correctly signed tx. else anyone can."
        }
      },
      "implementationNames": {
        "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478": "OneSig"
      }
    },
    {
      "name": "WETH9",
      "address": "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      "type": "Contract",
      "sourceHashes": [
        "0xec8c1fea9a5a10c4c028664a56d678a0776b07cfc510fc7fa54db0aed0978f49"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1513077455,
      "sinceBlock": 4719568,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "Wrapped Ether",
        "symbol": "WETH",
        "totalSupply": "2376662762441418177746655"
      },
      "implementationNames": {
        "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": "WETH9"
      }
    },
    {
      "name": "ReceiveUln302",
      "address": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
      "type": "Contract",
      "template": "layerzero/ReceiveUln302",
      "sourceHashes": [
        "0x3904c78c7b0abf91f9544ebb9f08f2d2bc83028df65c912a7f7a6ca1ca109dde"
      ],
      "proxyType": "immutable",
      "description": "Receive Library used by LayerZero, defining the validation of received messages.",
      "sinceTimestamp": 1706307863,
      "sinceBlock": 19093731,
      "values": {
        "$immutable": true,
        "messageLibType": 1,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "implementationNames": {
        "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2": "ReceiveUln302"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1710735815,
      "sinceBlock": 19459281,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x95A2115018b84cfe0630C16CCA277E1569a84BEf",
          "eth:0x4A4e996Dd8F36Dcf46b30A7F97877da922323EEb",
          "eth:0x3DE2da610996eA5A72B9Af7cB8740caC48A9329f",
          "eth:0x7C96179df8619E49B389784ECDBBcA7090a5D08F",
          "eth:0x0fCe5cd3FB6F3b3FB7f0f707070A0A7e2442f444",
          "eth:0x9eaC7114D1a1EaBc4732A886795cFD9E6E35843f"
        ],
        "$threshold": 4,
        "domainSeparator": "0x9c45fba9ca6969101cf490b08e204ef2bc28a4cfb14666994a0949f39b122e73",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 6 (67%)",
        "nonce": 223,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0xe67DB04d7eFF4e9ec282eD929632D4FF058112d7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xeF01c0D205961f792b72C568B6209872d0e82807",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BoringVault",
      "address": "eth:0xf0bb20865277aBd641a307eCe5Ee04E79073416C",
      "type": "Contract",
      "sourceHashes": [
        "0x2a286b779dc9dcc7de483c1818d6ccc1d36599b36069bb7984f6b6652447f8b0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717457039,
      "sinceBlock": 20014552,
      "values": {
        "$immutable": true,
        "authority": "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x8879d80fbef94394125fc18bf6c6e1c2cc0a42eda6c7a66d054ada4def32ba83",
        "hook": "eth:0x9AA79C84b79816ab920bBcE20f8f74557B514734",
        "name": "Ether.Fi Liquid ETH",
        "owner": "eth:0x0000000000000000000000000000000000000000",
        "symbol": "liquidETH",
        "totalSupply": "189820850447623768076013"
      },
      "implementationNames": {
        "eth:0xf0bb20865277aBd641a307eCe5Ee04E79073416C": "BoringVault"
      }
    }
  ],
  "abis": {
    "eth:0x0d05D94a5F1E76C18fbeB7A13d17C8a314088198": [
      "constructor(address _owner, address _vault, address payoutAddress, uint96 startingExchangeRate, address _base, uint16 allowedExchangeRateChangeUpper, uint16 allowedExchangeRateChangeLower, uint32 minimumUpdateDelayInSeconds, uint16 managementFee)",
      "error AccountantWithRateProviders__LowerBoundTooLarge()",
      "error AccountantWithRateProviders__ManagementFeeTooLarge()",
      "error AccountantWithRateProviders__OnlyCallableByBoringVault()",
      "error AccountantWithRateProviders__Paused()",
      "error AccountantWithRateProviders__UpdateDelayTooLarge()",
      "error AccountantWithRateProviders__UpperBoundTooSmall()",
      "error AccountantWithRateProviders__ZeroFeesOwed()",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event DelayInSecondsUpdated(uint32 oldDelay, uint32 newDelay)",
      "event ExchangeRateUpdated(uint96 oldRate, uint96 newRate, uint64 currentTime)",
      "event FeesClaimed(address indexed feeAsset, uint256 amount)",
      "event LowerBoundUpdated(uint16 oldBound, uint16 newBound)",
      "event ManagementFeeUpdated(uint16 oldFee, uint16 newFee)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event Paused()",
      "event PayoutAddressUpdated(address oldPayout, address newPayout)",
      "event RateProviderUpdated(address asset, bool isPegged, address rateProvider)",
      "event Unpaused()",
      "event UpperBoundUpdated(uint16 oldBound, uint16 newBound)",
      "function accountantState() view returns (address payoutAddress, uint128 feesOwedInBase, uint128 totalSharesLastUpdate, uint96 exchangeRate, uint16 allowedExchangeRateChangeUpper, uint16 allowedExchangeRateChangeLower, uint64 lastUpdateTimestamp, bool isPaused, uint32 minimumUpdateDelayInSeconds, uint16 managementFee)",
      "function authority() view returns (address)",
      "function base() view returns (address)",
      "function claimFees(address feeAsset)",
      "function decimals() view returns (uint8)",
      "function getRate() view returns (uint256 rate)",
      "function getRateInQuote(address quote) view returns (uint256 rateInQuote)",
      "function getRateInQuoteSafe(address quote) view returns (uint256 rateInQuote)",
      "function getRateSafe() view returns (uint256 rate)",
      "function owner() view returns (address)",
      "function pause()",
      "function rateProviderData(address) view returns (bool isPeggedToBase, address rateProvider)",
      "function setAuthority(address newAuthority)",
      "function setRateProviderData(address asset, bool isPeggedToBase, address rateProvider)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateDelay(uint32 minimumUpdateDelayInSeconds)",
      "function updateExchangeRate(uint96 newExchangeRate)",
      "function updateLower(uint16 allowedExchangeRateChangeLower)",
      "function updateManagementFee(uint16 managementFee)",
      "function updatePayoutAddress(address payoutAddress)",
      "function updateUpper(uint16 allowedExchangeRateChangeUpper)",
      "function vault() view returns (address)"
    ],
    "eth:0x1a44076050125825900e736c501f859c50fE728c": [
      "constructor(uint32 _eid, address _owner)",
      "error LZ_AlreadyRegistered()",
      "error LZ_ComposeExists()",
      "error LZ_ComposeNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_DefaultReceiveLibUnavailable()",
      "error LZ_DefaultSendLibUnavailable()",
      "error LZ_InsufficientFee(uint256 requiredNative, uint256 suppliedNative, uint256 requiredLzToken, uint256 suppliedLzToken)",
      "error LZ_InvalidExpiry()",
      "error LZ_InvalidNonce(uint64 nonce)",
      "error LZ_InvalidPayloadHash()",
      "error LZ_InvalidReceiveLibrary()",
      "error LZ_LzTokenUnavailable()",
      "error LZ_OnlyNonDefaultLib()",
      "error LZ_OnlyReceiveLib()",
      "error LZ_OnlyRegisteredLib()",
      "error LZ_OnlyRegisteredOrDefaultLib()",
      "error LZ_OnlySendLib()",
      "error LZ_PathNotInitializable()",
      "error LZ_PathNotVerifiable()",
      "error LZ_PayloadHashNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_SameValue()",
      "error LZ_SendReentrancy()",
      "error LZ_Unauthorized()",
      "error LZ_UnsupportedEid()",
      "error LZ_UnsupportedInterface()",
      "error LZ_ZeroLzTokenFee()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event ComposeDelivered(address from, address to, bytes32 guid, uint16 index)",
      "event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message)",
      "event DefaultReceiveLibrarySet(uint32 eid, address newLib)",
      "event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry)",
      "event DefaultSendLibrarySet(uint32 eid, address newLib)",
      "event DelegateSet(address sender, address delegate)",
      "event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce)",
      "event LibraryRegistered(address newLib)",
      "event LzComposeAlert(address indexed from, address indexed to, address indexed executor, bytes32 guid, uint16 index, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzReceiveAlert(address indexed receiver, address indexed executor, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, bytes32 guid, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzTokenSet(address token)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketDelivered(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver)",
      "event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketSent(bytes encodedPayload, bytes options, address sendLibrary)",
      "event PacketVerified(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver, bytes32 payloadHash)",
      "event ReceiveLibrarySet(address receiver, uint32 eid, address newLib)",
      "event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout)",
      "event SendLibrarySet(address sender, uint32 eid, address newLib)",
      "function EMPTY_PAYLOAD_HASH() view returns (bytes32)",
      "function NIL_PAYLOAD_HASH() view returns (bytes32)",
      "function blockedLibrary() view returns (address)",
      "function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function clear(address _oapp, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message)",
      "function composeQueue(address from, address to, bytes32 guid, uint16 index) view returns (bytes32 messageHash)",
      "function defaultReceiveLibrary(uint32 srcEid) view returns (address lib)",
      "function defaultReceiveLibraryTimeout(uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function defaultSendLibrary(uint32 dstEid) view returns (address lib)",
      "function delegates(address oapp) view returns (address delegate)",
      "function eid() view returns (uint32)",
      "function getConfig(address _oapp, address _lib, uint32 _eid, uint32 _configType) view returns (bytes config)",
      "function getReceiveLibrary(address _receiver, uint32 _srcEid) view returns (address lib, bool isDefault)",
      "function getRegisteredLibraries() view returns (address[])",
      "function getSendContext() view returns (uint32, address)",
      "function getSendLibrary(address _sender, uint32 _dstEid) view returns (address lib)",
      "function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) view returns (uint64)",
      "function inboundPayloadHash(address receiver, uint32 srcEid, bytes32 sender, uint64 inboundNonce) view returns (bytes32 payloadHash)",
      "function initializable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function isDefaultSendLibrary(address _sender, uint32 _dstEid) view returns (bool)",
      "function isRegisteredLibrary(address lib) view returns (bool)",
      "function isSendingMessage() view returns (bool)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function isValidReceiveLibrary(address _receiver, uint32 _srcEid, address _actualReceiveLib) view returns (bool)",
      "function lazyInboundNonce(address receiver, uint32 srcEid, bytes32 sender) view returns (uint64 nonce)",
      "function lzCompose(address _from, address _to, bytes32 _guid, uint16 _index, bytes _message, bytes _extraData) payable",
      "function lzComposeAlert(address _from, address _to, bytes32 _guid, uint16 _index, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, bytes _message, bytes _extraData) payable",
      "function lzReceiveAlert(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzToken() view returns (address)",
      "function nativeToken() view returns (address)",
      "function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) view returns (bytes32)",
      "function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function outboundNonce(address sender, uint32 dstEid, bytes32 receiver) view returns (uint64 nonce)",
      "function owner() view returns (address)",
      "function quote(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _sender) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function receiveLibraryTimeout(address receiver, uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function recoverToken(address _token, address _to, uint256 _amount)",
      "function registerLibrary(address _lib)",
      "function renounceOwnership()",
      "function send(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee))",
      "function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes _message)",
      "function setConfig(address _oapp, address _lib, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry)",
      "function setDefaultSendLibrary(uint32 _eid, address _newLib)",
      "function setDelegate(address _delegate)",
      "function setLzToken(address _lzToken)",
      "function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry)",
      "function setSendLibrary(address _oapp, uint32 _eid, address _newLib)",
      "function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function verify(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _payloadHash)"
    ],
    "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862": [
      "error LZ_NotImplemented()",
      "function isSupportedEid(uint32) pure returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "eth:0x25e8162d09239Fb5bE50E5DF18Adc1ED35533e61": [
      "constructor(address _owner, uint256 _totalPercent, tuple(address to, uint96 percent)[] _splits)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "function adjustSplits(tuple(address to, uint96 percent)[] _splits)",
      "function authority() view returns (address)",
      "function owner() view returns (address)",
      "function payoutSplits(address asset)",
      "function rescueERC20(address asset)",
      "function setAuthority(address newAuthority)",
      "function splits(uint256) view returns (address to, uint96 percent)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0x485Bde66Bb668a51f2372E34e45B1c6226798122": [
      "constructor(address _owner, address _authority)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event PublicCapabilityUpdated(address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event RoleCapabilityUpdated(uint8 indexed role, address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled)",
      "function authority() view returns (address)",
      "function canCall(address user, address target, bytes4 functionSig) view returns (bool)",
      "function doesRoleHaveCapability(uint8 role, address target, bytes4 functionSig) view returns (bool)",
      "function doesUserHaveRole(address user, uint8 role) view returns (bool)",
      "function getRolesWithCapability(address, bytes4) view returns (bytes32)",
      "function getUserRoles(address) view returns (bytes32)",
      "function isCapabilityPublic(address, bytes4) view returns (bool)",
      "function owner() view returns (address)",
      "function setAuthority(address newAuthority)",
      "function setPublicCapability(address target, bytes4 functionSig, bool enabled)",
      "function setRoleCapability(uint8 role, address target, bytes4 functionSig, bool enabled)",
      "function setUserRole(address user, uint8 role, bool enabled)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056": [
      "error LZ_Treasury_LzTokenNotEnabled()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getFee(address, uint32, uint256 _totalFee, bool _payInLzToken) view returns (uint256)",
      "function lzTokenEnabled() view returns (bool)",
      "function lzTokenFee() view returns (uint256)",
      "function nativeBP() view returns (uint256)",
      "function owner() view returns (address)",
      "function payFee(address, uint32, uint256 _totalFee, bool _payInLzToken) payable returns (uint256)",
      "function renounceOwnership()",
      "function setLzTokenEnabled(bool _lzTokenEnabled)",
      "function setLzTokenFee(uint256 _lzTokenFee)",
      "function setNativeFeeBP(uint256 _nativeBP)",
      "function transferOwnership(address newOwner)",
      "function withdrawLzToken(address _messageLib, address _lzToken, address _to, uint256 _amount)",
      "function withdrawNativeFee(address _messageLib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)"
    ],
    "eth:0x5f0E7A424d306e9E310be4f5Bb347216e473Ae55": [
      "constructor(address _singleton)"
    ],
    "eth:0x68eC1FdD4Bb202B2e07aE751CB5553644aA48cFA": [
      "constructor(address _singleton)"
    ],
    "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_RL_AtLeastOneDVN()",
      "error LZ_RL_CannotWithdrawAltToken()",
      "error LZ_RL_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_RL_InvalidCmdHash()",
      "error LZ_RL_InvalidConfigType(uint32 configType)",
      "error LZ_RL_InvalidEid()",
      "error LZ_RL_InvalidExecutor()",
      "error LZ_RL_InvalidOptionalDVNCount()",
      "error LZ_RL_InvalidOptionalDVNThreshold()",
      "error LZ_RL_InvalidPacketHeader()",
      "error LZ_RL_InvalidPacketVersion()",
      "error LZ_RL_InvalidReceiver()",
      "error LZ_RL_InvalidRequiredDVNCount()",
      "error LZ_RL_NotTreasury()",
      "error LZ_RL_Unsorted()",
      "error LZ_RL_UnsupportedEid(uint32 eid)",
      "error LZ_RL_Verifying()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultReadLibConfigsSet(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, bytes32 cmdHash, bytes32 payloadHash)",
      "event ReadLibConfigSet(address oapp, uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "function cmdHashLookup(address oapp, uint32 eid, uint64 nonce) view returns (bytes32 cmdHash)",
      "function commitVerification(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function fees(address worker) view returns (uint256 fee)",
      "function getAppReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function getTreasuryAndNativeFeeCap() view returns (address, uint256)",
      "function hashLookup(bytes32 headerHash, bytes32 cmdHash, address dvn) view returns (bytes32 payloadHash)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReadLibConfigs(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _cmdHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "eth:0x9AA79C84b79816ab920bBcE20f8f74557B514734": [
      "constructor(address _owner, address _vault, address _accountant, address _weth, address _lzEndPoint, address _delegate, address _lzToken)",
      "error CrossChainTellerWithGenericBridge__UnsafeCastToUint96()",
      "error InboundRateLimitExceeded()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptionType(uint16 optionType)",
      "error LayerZeroTeller__BadFeeToken()",
      "error LayerZeroTeller__FeeExceedsMax(uint256 chainSelector, uint256 fee, uint256 maxFee)",
      "error LayerZeroTeller__MessagesNotAllowedFrom(uint256 chainSelector)",
      "error LayerZeroTeller__MessagesNotAllowedFromSender(uint256 chainSelector, address sender)",
      "error LayerZeroTeller__MessagesNotAllowedTo(uint256 chainSelector)",
      "error LayerZeroTeller__ZeroMessageGasLimit()",
      "error LzTokenUnavailable()",
      "error MessageLib__ShareAmountOverflow()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OutboundRateLimitExceeded()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error TellerWithMultiAssetSupport__AssetNotSupported()",
      "error TellerWithMultiAssetSupport__BadDepositHash()",
      "error TellerWithMultiAssetSupport__CannotDepositNative()",
      "error TellerWithMultiAssetSupport__DualDeposit()",
      "error TellerWithMultiAssetSupport__MinimumAssetsNotMet()",
      "error TellerWithMultiAssetSupport__MinimumMintNotMet()",
      "error TellerWithMultiAssetSupport__Paused()",
      "error TellerWithMultiAssetSupport__PermitFailedAndAllowanceTooLow()",
      "error TellerWithMultiAssetSupport__ShareLockPeriodTooLong()",
      "error TellerWithMultiAssetSupport__SharePremiumTooLarge()",
      "error TellerWithMultiAssetSupport__SharesAreLocked()",
      "error TellerWithMultiAssetSupport__SharesAreUnLocked()",
      "error TellerWithMultiAssetSupport__TransferDenied(address from, address to, address operator)",
      "error TellerWithMultiAssetSupport__ZeroAssets()",
      "error TellerWithMultiAssetSupport__ZeroShares()",
      "event AllowFrom(address indexed user)",
      "event AllowOperator(address indexed user)",
      "event AllowTo(address indexed user)",
      "event AssetDataUpdated(address indexed asset, bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event BulkDeposit(address indexed asset, uint256 depositAmount)",
      "event BulkWithdraw(address indexed asset, uint256 shareAmount)",
      "event ChainAdded(uint256 chainId, bool allowMessagesFrom, bool allowMessagesTo, address targetTeller)",
      "event ChainAllowMessagesFrom(uint256 chainId, address targetTeller)",
      "event ChainAllowMessagesTo(uint256 chainId, address targetTeller)",
      "event ChainRemoved(uint256 chainId)",
      "event ChainSetGasLimit(uint256 chainId, uint128 messageGasLimit)",
      "event ChainStopMessagesFrom(uint256 chainId)",
      "event ChainStopMessagesTo(uint256 chainId)",
      "event DenyFrom(address indexed user)",
      "event DenyOperator(address indexed user)",
      "event DenyTo(address indexed user)",
      "event Deposit(uint256 indexed nonce, address indexed receiver, address indexed depositAsset, uint256 depositAmount, uint256 shareAmount, uint256 depositTimestamp, uint256 shareLockPeriodAtTimeOfDeposit)",
      "event DepositRefunded(uint256 indexed nonce, bytes32 depositHash, address indexed user)",
      "event InboundRateLimitsChanged(tuple(uint32 peerEid, uint256 limit, uint256 window)[] rateLimitConfigs)",
      "event MessageReceived(bytes32 indexed messageId, uint256 shareAmount, address indexed to)",
      "event MessageSent(bytes32 indexed messageId, uint256 shareAmount, address indexed to)",
      "event OutboundRateLimitsChanged(tuple(uint32 peerEid, uint256 limit, uint256 window)[] rateLimitConfigs)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event Paused()",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event Unpaused()",
      "function accountant() view returns (address)",
      "function addChain(uint32 chainId, bool allowMessagesFrom, bool allowMessagesTo, address targetTeller, uint128 messageGasLimit)",
      "function allowAll(address user)",
      "function allowFrom(address user)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function allowMessagesFromChain(uint32 chainId, address targetTeller)",
      "function allowMessagesToChain(uint32 chainId, address targetTeller, uint128 messageGasLimit)",
      "function allowOperator(address user)",
      "function allowTo(address user)",
      "function assetData(address) view returns (bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "function authority() view returns (address)",
      "function beforeTransfer(address from, address to, address operator) view",
      "function bridge(uint96 shareAmount, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable",
      "function bulkDeposit(address depositAsset, uint256 depositAmount, uint256 minimumMint, address to) returns (uint256 shares)",
      "function bulkWithdraw(address withdrawAsset, uint256 shareAmount, uint256 minimumAssets, address to) returns (uint256 assetsOut)",
      "function composeMsgSender() view returns (address sender)",
      "function denyAll(address user)",
      "function denyFrom(address user)",
      "function denyOperator(address user)",
      "function denyTo(address user)",
      "function deposit(address depositAsset, uint256 depositAmount, uint256 minimumMint) payable returns (uint256 shares)",
      "function depositAndBridge(address depositAsset, uint256 depositAmount, uint256 minimumMint, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable returns (uint256 sharesBridged)",
      "function depositAndBridgeWithPermit(address depositAsset, uint256 depositAmount, uint256 minimumMint, uint256 deadline, uint8 v, bytes32 r, bytes32 s, address to, bytes bridgeWildCard, address feeToken, uint256 maxFee) payable returns (uint256 sharesBridged)",
      "function depositNonce() view returns (uint96)",
      "function depositWithPermit(address depositAsset, uint256 depositAmount, uint256 minimumMint, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (uint256 shares)",
      "function endpoint() view returns (address)",
      "function fromDenyList(address) view returns (bool)",
      "function getAmountCanBeReceived(uint32 _srcEid) view returns (uint256 inboundAmountInFlight, uint256 amountCanBeReceived)",
      "function getAmountCanBeSent(uint32 _dstEid) view returns (uint256 outboundAmountInFlight, uint256 amountCanBeSent)",
      "function idToChains(uint32) view returns (bool allowMessagesFrom, bool allowMessagesTo, uint128 messageGasLimit)",
      "function inboundRateLimits(uint32 srcEid) view returns (uint256 amountInFlight, uint256 lastUpdated, uint256 limit, uint256 window)",
      "function isPaused() view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function nativeWrapper() view returns (address)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function operatorDenyList(address) view returns (bool)",
      "function outboundRateLimits(uint32 dstEid) view returns (uint256 amountInFlight, uint256 lastUpdated, uint256 limit, uint256 window)",
      "function owner() view returns (address)",
      "function pause()",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function previewFee(uint96 shareAmount, address to, bytes bridgeWildCard, address feeToken) view returns (uint256 fee)",
      "function publicDepositHistory(uint256) view returns (bytes32)",
      "function refundDeposit(uint256 nonce, address receiver, address depositAsset, uint256 depositAmount, uint256 shareAmount, uint256 depositTimestamp, uint256 shareLockUpPeriodAtTimeOfDeposit)",
      "function removeChain(uint32 chainId)",
      "function setAuthority(address newAuthority)",
      "function setChainGasLimit(uint32 chainId, uint128 messageGasLimit)",
      "function setDelegate(address _delegate)",
      "function setInboundRateLimits(tuple(uint32 peerEid, uint256 limit, uint256 window)[] _rateLimitConfigs)",
      "function setOutboundRateLimits(tuple(uint32 peerEid, uint256 limit, uint256 window)[] _rateLimitConfigs)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setShareLockPeriod(uint64 _shareLockPeriod)",
      "function shareLockPeriod() view returns (uint64)",
      "function shareUnlockTime(address) view returns (uint256)",
      "function stopMessagesFromChain(uint32 chainId)",
      "function stopMessagesToChain(uint32 chainId)",
      "function toDenyList(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateAssetData(address asset, bool allowDeposits, bool allowWithdraws, uint16 sharePremium)",
      "function vault() view returns (address)"
    ],
    "eth:0xb35a429474404e2EdA28548075623993A40239B6": [
      "constructor(address _owner, address _authority)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event PublicCapabilityUpdated(address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event RoleCapabilityUpdated(uint8 indexed role, address indexed target, bytes4 indexed functionSig, bool enabled)",
      "event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled)",
      "function authority() view returns (address)",
      "function canCall(address user, address target, bytes4 functionSig) view returns (bool)",
      "function doesRoleHaveCapability(uint8 role, address target, bytes4 functionSig) view returns (bool)",
      "function doesUserHaveRole(address user, uint8 role) view returns (bool)",
      "function getRolesWithCapability(address, bytes4) view returns (bytes32)",
      "function getUserRoles(address) view returns (bytes32)",
      "function isCapabilityPublic(address, bytes4) view returns (bool)",
      "function owner() view returns (address)",
      "function setAuthority(address newAuthority)",
      "function setPublicCapability(address target, bytes4 functionSig, bool enabled)",
      "function setRoleCapability(uint8 role, address target, bytes4 functionSig, bool enabled)",
      "function setUserRole(address user, uint8 role, bool enabled)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_CannotWithdrawAltToken()",
      "error LZ_MessageLib_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_MessageLib_InvalidExecutor()",
      "error LZ_MessageLib_InvalidMessageSize(uint256 actual, uint256 max)",
      "error LZ_MessageLib_NotTreasury()",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_MessageLib_TransferFailed()",
      "error LZ_MessageLib_ZeroMessageSize()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultExecutorConfigsSet(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] params)",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorConfigSet(address oapp, uint32 eid, tuple(uint32 maxMessageSize, address executor) config)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function executorConfigs(address oapp, uint32 eid) view returns (uint32 maxMessageSize, address executor)",
      "function fees(address worker) view returns (uint256)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getExecutorConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint32 maxMessageSize, address executor) rtnConfig)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultExecutorConfigs(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function treasury() view returns (address)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478": [
      "constructor(uint64 _oneSigId, address[] _signers, uint256 _threshold, address[] _executors, bool _executorRequired, bytes32 _seed)",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ExecutionFailed(uint256 index)",
      "error ExecutorAlreadyActive(address executor)",
      "error ExecutorNotFound(address executor)",
      "error InvalidExecutor()",
      "error InvalidProofOrNonce()",
      "error InvalidSigner()",
      "error MerkleRootExpired()",
      "error OnlyExecutorOrSigner()",
      "error OnlySelfCall()",
      "error ReentrancyGuardReentrantCall()",
      "error SignatureError()",
      "error SignerAlreadyAdded(address signer)",
      "error SignerNotFound(address signer)",
      "error TotalSignersLessThanThreshold(uint256 totalSigners, uint256 threshold)",
      "error UnsortedSigners()",
      "error ZeroThreshold()",
      "event ExecutorRequiredSet(bool required)",
      "event ExecutorSet(address indexed executor, bool active)",
      "event SeedSet(bytes32 seed)",
      "event SignerSet(address indexed signer, bool active)",
      "event ThresholdSet(uint256 threshold)",
      "event TransactionExecuted(bytes32 merkleRoot, uint256 nonce)",
      "function LEAF_ENCODING_VERSION() view returns (uint8)",
      "function ONE_SIG_ID() view returns (uint64)",
      "function VERSION() view returns (string)",
      "function canExecuteTransaction(address _sender) view returns (bool)",
      "function encodeLeaf(uint64 _nonce, tuple(address to, uint256 value, bytes data)[] _calls) view returns (bytes32)",
      "function executeTransaction(tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction, bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) payable",
      "function executorRequired() view returns (bool)",
      "function getExecutors() view returns (address[])",
      "function getSigners() view returns (address[])",
      "function isExecutor(address _executor) view returns (bool)",
      "function isSigner(address _signer) view returns (bool)",
      "function nonce() view returns (uint64)",
      "function seed() view returns (bytes32)",
      "function setExecutor(address _executor, bool _active)",
      "function setExecutorRequired(bool _executorRequired)",
      "function setSeed(bytes32 _seed)",
      "function setSigner(address _signer, bool _active)",
      "function setThreshold(uint256 _threshold)",
      "function threshold() view returns (uint256)",
      "function totalExecutors() view returns (uint256)",
      "function totalSigners() view returns (uint256)",
      "function verifyMerkleRoot(bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) view",
      "function verifyNSignatures(bytes32 _digest, bytes _signatures, uint256 _threshold) view",
      "function verifySignatures(bytes32 _digest, bytes _signatures) view",
      "function verifyTransactionProof(bytes32 _merkleRoot, tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction) view"
    ],
    "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": [
      "function name() view returns (string)",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function withdraw(uint256 wad)",
      "function decimals() view returns (uint8)",
      "function balanceOf(address) view returns (uint256)",
      "function symbol() view returns (string)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function deposit() payable",
      "function allowance(address, address) view returns (uint256)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "event Deposit(address indexed dst, uint256 wad)",
      "event Withdrawal(address indexed src, uint256 wad)"
    ],
    "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2": [
      "constructor(address _endpoint)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidEid()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidPacketHeader()",
      "error LZ_ULN_InvalidPacketVersion()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_Verifying()",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, uint256 confirmations, bytes32 proofHash)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function assertHeader(bytes _packetHeader, uint32 _localEid) pure",
      "function commitVerification(bytes _packetHeader, bytes32 _payloadHash)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function hashLookup(bytes32 headerHash, bytes32 payloadHash, address dvn) view returns (bool submitted, uint64 confirmations)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _payloadHash, uint64 _confirmations)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "eth:0xCEA8039076E35a825854c5C2f85659430b06ec96": [
      "constructor(address _singleton)"
    ],
    "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0xf0bb20865277aBd641a307eCe5Ee04E79073416C": [
      "constructor(address _owner, string _name, string _symbol, uint8 _decimals)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error FailedInnerCall()",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event AuthorityUpdated(address indexed user, address indexed newAuthority)",
      "event Enter(address indexed from, address indexed asset, uint256 amount, address indexed to, uint256 shares)",
      "event Exit(address indexed to, address indexed asset, uint256 amount, address indexed from, uint256 shares)",
      "event OwnershipTransferred(address indexed user, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function authority() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function enter(address from, address asset, uint256 assetAmount, address to, uint256 shareAmount)",
      "function exit(address to, address asset, uint256 assetAmount, address from, uint256 shareAmount)",
      "function hook() view returns (address)",
      "function manage(address[] targets, bytes[] data, uint256[] values) returns (bytes[] results)",
      "function manage(address target, bytes data, uint256 value) returns (bytes result)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function setAuthority(address newAuthority)",
      "function setBeforeTransferHook(address _hook)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "layerzero/BlockedMessageLib": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "layerzero/EndpointV2": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/OneSigMultisig": "0xc11771171058a9b7b769e672624ae0e1bc69bd278173d8b2fd0260d666354861",
    "layerzero/ReadLib1002": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/ReceiveUln302": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/SendUln302": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d"
  },
  "usedBlockNumbers": { "ethereum": 23339667 },
  "permissionsConfigHash": "0x30bd049cdf80908a953a1a1555b358f93f315aba5e812ac62a004fc00f1ae752"
}
